@using messanger.Client.Repositories.Interfaces
@using Blazored.SessionStorage
<ListItem OnClick="@OnClick">
    <span class="user-info">@User.FirstName @User.LastName</span>
</ListItem>

@code {
    [Parameter]
    public UserResponseDto User { get; set; }

    [Parameter] public EventCallback<UserResponseDto> AfterUserClicked { get; set; }

    [Inject] public NavigationManager NavigationManager { get; set; }

    [Inject] public IConversationsRepository ConversationsRepository { get; set; }

    [Inject] public ISessionStorageService SessionStorageService { get; set; }

    private async Task OnClick()
    {
        var idConversation = await ConversationsRepository
            .GetPrivateConversationIdWithUserAsync(User.IdUser);

        if (idConversation is null)
        {
            await SessionStorageService.SetItemAsync("NewPrivateConversationParameters", new NewPrivateConversationParameters()
            {
                IdUser = User.IdUser,
                ConversationName = $"{User.FirstName} {User.LastName}"
            });
            NavigationManager.NavigateTo($"conversation/new/private");
        }
        else
        {
            NavigationManager.NavigateTo($"conversation/{idConversation}");
        }

        if (AfterUserClicked.HasDelegate)
            await AfterUserClicked.InvokeAsync();
    }
}
